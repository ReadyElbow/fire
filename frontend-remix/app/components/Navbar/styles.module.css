.header {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  max-width: 100%;
  padding-left: 1rem;
  padding-right: 1rem;
}

.NavMenuRoot {
  position: relative;
  display: flex;
  justify-content: center;
  /* 
  This is required to be able to render the dropdown    
  in the boundaries of the NavMenuRoot otherwise it is
  cut off
  */
  width: 70vw;
  z-index: 1;
}

.NavMenuList {
  display: flex;
  justify-content: center;
  align-items: flex-end;
  border: 0px;
  border-bottom: 1px;
  border-style: solid;
  border-color: var(--blue-9);
  padding: 0.5rem;
  padding-bottom: 0rem;
  list-style: none;
  box-shadow: 0 4px 2px -2px var(--black-a4);
  margin: 0;
}

.NavMenuTrigger {
  display: flex;
  align-items: center;
  /* height: 100%; */
  text-decoration: none;
  padding: 1rem;
  font-weight: 600;
  font-size: 1rem;
  color: var(--black-a9);
  border: none;
  border-radius: 2%;
  background-color: rgb(255, 255, 255);
  padding: 1em;
  transition: all 500ms ease;
}

.NavMenuTrigger:hover,
.NavMenuTrigger:focus {
  background-color: var(--blue-5);
}

.NavMenuChevron {
  position: relative;
  transition: transform 250ms ease;
}
[data-state='open'] > .NavMenuChevron {
  transform: rotate(-180deg);
}

.NavMenuContent {
  /* 
  The element is removed from the normal document flow 
  and no space is created for it.
  It is positioned relative to its closest ancestor (right
  below the relevant Trigger)
  It introduces Stacking Contents, hence why Z-Index 
  was defined at start.
  */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  animation-duration: 250ms;
  animation-timing-function: ease;
}
.NavMenuContent[data-motion='from-start'] {
  animation-name: enterFromLeft;
}
.NavMenuContent[data-motion='from-end'] {
  animation-name: enterFromRight;
}
.NavMenuContent[data-motion='to-start'] {
  animation-name: exitToLeft;
}
.NavMenuContent[data-motion='to-end'] {
  animation-name: exitToRight;
}
@media only screen and (min-width: 600px) {
  .NavMenuContent {
    width: auto;
  }
}


.NavSubMenu {
  display: grid;
  padding: 1rem;
  grid-template-columns: 1fr 1fr;
  gap: 3px;
}

.NavSubMenu a {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: space-around;
  overflow: hidden;
  padding: 1rem;
  border-radius: 10%;
  color: inherit;
  text-decoration: none;
  gap: 1rem;
  width: 2rem;
  transition: background-color 100ms;
}
.NavSubMenu a:hover {
  background: #e3e3e3;
}

.SubMenuItemTitle {
  font-weight: 500;
}

.SubMenuItemDescription {
  color: var(--black-a7);
  font-weight: 100;
}

/* 
#sidebar nav a.active {
  background: hsl(224, 98%, 58%);
  color: white;
}

#sidebar nav a.pending {
  animation: progress 2s infinite ease-in-out;
  animation-delay: 200ms;
} */

/* -------------- */
/* - Animations - */
/* -------------- */
@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: rotateX(-30deg) scale(0.9);
  }
  to {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
  to {
    opacity: 0;
    transform: rotateX(-10deg) scale(0.95);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}





















/* styles.css */
.NavigationMenuRoot {
  position: relative;
  z-index: 1;

}

.NavigationMenuContent {
  position: absolute;
  /* z-index: 1; */
  top: 0;
  left: 0;
  width: 100%;
  animation-duration: 250ms;
  animation-timing-function: ease;
}
.NavigationMenuContent[data-motion='from-start'] {
  animation-name: enterFromLeft;
}
.NavigationMenuContent[data-motion='from-end'] {
  animation-name: enterFromRight;
}
.NavigationMenuContent[data-motion='to-start'] {
  animation-name: exitToLeft;
}
.NavigationMenuContent[data-motion='to-end'] {
  animation-name: exitToRight;
}

.ViewportPosition {
  position: absolute;
  display: flex;
  justify-content: center;
  width: 100%;
  top: 100%;
  left: 0;
  perspective: 2000px;
}

.NavigationMenuViewport {
  position: relative;
  width: var(--radix-navigation-menu-viewport-width);
  height: var(--radix-navigation-menu-viewport-height);
  transition: width, height, 250ms ease;
}

@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}