generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Accounts {
  id                  Int                @id @default(autoincrement())
  provider            String
  bankAccountNumber   Int
  bankAccountSortCode String
  bankAccountType     String
  interestRate        Float
  balance             Float
  updatedAt           DateTime           @updatedAt
  active              Boolean            @default(true)
  transactions        BankTransactions[]
  savingsBudget       SavingsBudget[]
}

model BankTransactions {
  id                      Int                    @id @default(autoincrement())
  transactionDate         DateTime
  description             String
  notes                   String
  amount                  Float
  balanceAfterTransaction Float
  accountID               Int
  account                 Accounts               @relation(fields: [accountID], references: [id])
  transactionCategory     TransactionCategories?
}

model TransactionCategories {
  id             Int              @id @default(autoincrement())
  budgetCategory String
  date           DateTime
  budget         ExpenseBudget    @relation(fields: [budgetCategory, date], references: [budgetCategory, date])
  transaction    BankTransactions @relation(fields: [id], references: [id])
}

model JobHistory {
  jobTitle  String
  employer  String
  activeJob Boolean   @default(true)
  startDate DateTime
  endDate   DateTime?
  salary    Float

  @@id([jobTitle, employer])
}

model Debts {
  name         String       @id
  type         String
  description  DateTime
  interestRate Float
  amountOwed   Float
  dueDate      DateTime
  budget       DebtBudget[]
}

model ExpenseBudget {
  date               DateTime
  budgetCategory     String
  amount             Float
  percentage         Float
  notes              String
  debtBudget         DebtBudget?
  savingsBudget      SavingsBudget?
  mappedTransactions TransactionCategories[]

  @@id([date, budgetCategory])
}

model DebtBudget {
  date           DateTime
  budgetCategory String
  debtName       String
  debts          Debts         @relation(fields: [debtName], references: [name])
  expenseBudget  ExpenseBudget @relation(fields: [date, budgetCategory], references: [date, budgetCategory])

  @@id([date, budgetCategory])
}

model SavingsBudget {
  date           DateTime
  budgetCategory String
  accountID      Int
  accounts       Accounts      @relation(fields: [accountID], references: [id])
  expenseBudget  ExpenseBudget @relation(fields: [date, budgetCategory], references: [date, budgetCategory])

  @@id([date, budgetCategory])
}
